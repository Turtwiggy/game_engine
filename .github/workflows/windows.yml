name: game_defence

on:
  push:
    branches: [ develop ]

jobs:
  test-then-upload-game:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            vcpkg-response-file: vcpkg-x64-windows.txt
            triplet: x64-windows
    env:
      VCPKG_ROOT: ${{ github.workspace }}/thirdparty/vcpkg
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}

    steps:

    - uses: lukka/get-cmake@latest
    - uses: ilammy/msvc-dev-cmd@v1.4.1
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Restore artifacts, or setup vcpkg for building artifacts
      uses: lukka/run-vcpkg@v10
      id: runvcpkg
      with:
        vcpkgDirectory: '${{ github.workspace }}/thirdparty/vcpkg'
        vcpkgJsonGlob: '**/game_defence_tests/vcpkg.json'
        runVcpkgInstall: true

    - name: configure
      run: mkdir build && cmake --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Release -S . -B build -G Ninja

    - name: build-tests
      run: cmake --build build --config Release --target game_defence_tests --parallel 10
    
    - name: run-tests
      run: ./build/game_defence_tests/game_defence_tests.exe

    - name: build-game
      run: cmake --build build --config Release --target game_defence --parallel 10

    - name: copy-game-assets
      run: | 
        cp -r ${{ github.workspace }}/game_defence/assets ./build/game_defence/
        rm ./build/game_defence/cmake_install.cmake 
        rm ./build/game_defence/game_defence.exe.manifest
        rm -r ./build/game_defence/CMakeFiles

    - name: release-game
      uses: actions/upload-artifact@v3
      with:
        name: game_defence
        path: ./build/game_defence

