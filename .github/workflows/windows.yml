name: game_defence Tests

on:
  push:
    branches: [ develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            vcpkg-response-file: vcpkg-x64-windows.txt
            triplet: x64-windows
    env:
      # Indicates the location of the vcpkg as a Git submodule of the project repository.
      VCPKG_ROOT: ${{ github.workspace }}/thirdparty/vcpkg

    steps:

    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Restore vcpkg and its artifacts.
      uses: actions/cache@v3
      with:
        # The first path is the location of vcpkg: it contains the vcpkg executable and data files, as long as the
        # built package archives (aka binary cache) which are located by VCPKG_DEFAULT_BINARY_CACHE env var.
        # The other paths starting with '!' are exclusions: they contain termporary files generated during the build of the installed packages.
        path: |
          ${{ env.VCPKG_ROOT }}
          !${{ env.VCPKG_ROOT }}/buildtrees
          !${{ env.VCPKG_ROOT }}/packages
          !${{ env.VCPKG_ROOT }}/downloads
          !${{ env.VCPKG_ROOT }}/installed
        key: ${{ hashFiles( format('{0}/{1}', github.workspace, matrix.vcpkg-response-file )) }}-${{ hashFiles('.git/modules/thirdparty/vcpkg/HEAD') }}-${{ runner.os }}
    
    - uses: lukka/get-cmake@latest
    
    - uses: ilammy/msvc-dev-cmd@v1.4.1

    - name: Restore artifacts, or setup vcpkg for building artifacts
      uses: lukka/run-vcpkg@v10
      with:
        setupOnly: true
        vcpkgDirectory: '${{ github.workspace }}/thirdparty/vcpkg'
    - run: |
        $VCPKG_ROOT/vcpkg.exe install @${{ matrix.vcpkg-response-file }}

    - name: configure
      run: cmake --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Release -S . -B build -G Ninja
    - name: Build
      run: cmake --build build --config Release --target game_defence_tests --parallel 10
    - name: Make
      run: cd build && make

    - name: Tests
      run: ./build/game_defence_tests/game_defence_tests.exe
